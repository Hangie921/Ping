.container {
  height: 100vh;
  background: none; }
  @media (min-width: 768px) {
    .container {
      background: url("../../img/logo_background.jpg") no-repeat;
      background-position: center 120%;
      background-size: 130% 60%;
      min-height: 568px; } }
  @media (min-width: 992px) {
    .container {
      background: url("../../img/logo_background.jpg") no-repeat;
      background-position: center 120%;
      background-size: 100% 60%;
      min-height: 568px; } }
  @media (min-width: 1200px) {
    .container {
      background: url("../../img/logo_background.jpg") no-repeat;
      background-position: center 120%;
      background-size: 100% 60%;
      min-height: 100%;
      height: 100vh; } }

.brand_container {
  width: 48%;
  min-width: 300px;
  padding: 50px 0px;
  margin-left: auto;
  margin-right: auto;
  text-align: center; }
  .brand_container img {
    width: 100%;
    max-width: 187px;
    min-width: 130px;
    height: auto;
    display: block;
    margin-left: auto;
    margin-right: auto; }

.container #login_form {
  padding-top: 50px;
  text-align: center; }
  .container #login_form .input_text_container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 20px; }
    .container #login_form .input_text_container input::-webkit-input-placeholder, .container #login_form .input_text_container input:-ms-input-placeholder {
      color: #4B4B4B; }
  .container #login_form .btn {
    margin-left: auto;
    margin-right: auto;
    max-width: 300px; }
  .container #login_form .forget_pwd {
    width: 300px;
    display: block;
    margin-top: 20px;
    margin-left: 28%;
    text-align: left;
    font-size: 14px; }
    @media (min-width: 768px) {
      .container #login_form .forget_pwd {
        margin-left: 31%; } }
    @media (max-width: 480px) {
      .container #login_form .forget_pwd {
        margin-left: 10%; } }

/*# sourceMappingURL=data:application/json;base64, */
